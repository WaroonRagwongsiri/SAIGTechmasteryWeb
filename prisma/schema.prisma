// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
	provider = "prisma-client-js"
}

datasource db {
	provider = "mongodb"
	url	  = env("MONGO_URI")
}

model User {
	id					String		@id @default(auto()) @map("_id") @db.ObjectId
	email				String		@unique
	password			String
	role				Role		@default(RENTER)
	firstName			String
	lastName			String
	dateOfBirth			DateTime
	profilePhoto		String?
	createdAt			DateTime	@default(now())
	updatedAt			DateTime	@updatedAt

	// Relations
	mateProfile			MateProfile?
	sentBookings		Booking[]	@relation("RenterBookings")
	receivedBookings	Booking[]	@relation("MateBookings")

	@@map("users")
}

model MateProfile {
	id					String		@id @default(auto()) @map("_id") @db.ObjectId
	userId				String		@unique @db.ObjectId
	bio					String?
	hourlyRate			Float
	isAvailable			Boolean		@default(true)
	createdAt			DateTime	@default(now())
	updatedAt			DateTime	@updatedAt
	rating				Float?		@default(0.0)
	ratingCount			Int			@default(0)

	// Relations
	user	User @relation(fields: [userId], references: [id], onDelete: Cascade)

	@@map("mate_profiles")
}

model Booking {
	id					String		@id @default(auto()) @map("_id") @db.ObjectId
	renterId			String		@db.ObjectId
	mateId				String		@db.ObjectId
	activity			String
	date				DateTime
	startTime			String
	endTime				String
	totalAmount			Float
	status				BookingStatus	@default(PENDING)
	createdAt			DateTime	@default(now())
	updatedAt			DateTime	@updatedAt

	// Relations
	renter	User @relation("RenterBookings", fields: [renterId], references: [id])
	mate	User @relation("MateBookings", fields: [mateId], references: [id])

	@@map("bookings")
}

// Enums
enum Role {
	RENTER
	MATE
	ADMIN
}

enum BookingStatus {
	PENDING
	CONFIRMED
	PAYMENT_PENDING
	COMPLETED
	CANCELLED
}
